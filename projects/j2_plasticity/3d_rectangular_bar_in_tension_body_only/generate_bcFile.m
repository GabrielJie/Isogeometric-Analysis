function generate_bcFile(numRefinements)
    % Set the path to the assembly files directory
    directory_assembly = sprintf('../assembly_files/numRefinements%d/', numRefinements);
    
    % File paths
    file_assembly_global = strcat(directory_assembly, 'file_assembly_global');
    file_assembly_patch  = strcat(directory_assembly, 'file_assembly_patch');
    
    % Load the global assembly file
    load(file_assembly_global, ...
         'numPatches', ...
         'numNodesOnPatch', ...
         'numTimeSteps', ...
         'numDOFs', ...
         'numDOFsPerNode', ...
         'GN_array');
    
    
    % Parameters for time
    time_current = 0;
    Delta_t = 0.01;
    
    for n = 1 : numTimeSteps
        % Update the time
        time_current = time_current + Delta_t;
        
        
        %------------------------------------------------------------------
        %  Initialize the BC arrays
        %------------------------------------------------------------------
        BCs_displacement = [];
        BCs_force = [];
        
        
        %------------------------------------------------------------------
        % -----------------------------------------------------------------
        %   Begin: Set BCs for patch 1
        % -----------------------------------------------------------------
        %------------------------------------------------------------------
        load(sprintf('%s%d', file_assembly_patch, 1), ...
             'numNodesPerElement1', ...
             'numNodesPerElement2', ...
             'numNodesPerElement3', ...
             'numElements1', ...
             'numElements2', ...
             'numElements3', ...
             'IEN_array');
        
        
        %------------------------------------------------------------------
        %  Displacements for top grip
        %------------------------------------------------------------------
        % Degrees of freedom and BC values
        dofIndex = [1; 2; 3];
        bcValue = [0; 0; 0];
        
        
        % y-z surface, x = 0
        BCs_numNodes = (1 * numElements2 * numElements3) * (1 * numNodesPerElement2 * numNodesPerElement3);
        
        elementIndex = find_element_index(1, ...
                                          (1 : numElements2)', ...
                                          (1 : numElements3)', ...
                                          numElements1, ...
                                          numElements2, ...
                                          numElements3);
        
        nodeIndex = find_node_index(1, ...
                                    (1 : numNodesPerElement2)', ...
                                    (1 : numNodesPerElement3)', ...
                                    numNodesPerElement1, ...
                                    numNodesPerElement2, ...
                                    numNodesPerElement3, ...
                                    IEN_array(:, elementIndex));
        
        BCs_displacement = [BCs_displacement; ...
                            [kron(GN_array(nodeIndex), ones(3, 1)), repmat(dofIndex, BCs_numNodes, 1), repmat(bcValue, BCs_numNodes, 1)]];
        
        
        %------------------------------------------------------------------
        %  Displacements for bottom grip
        %------------------------------------------------------------------
        % Degrees of freedom and BC values
        dofIndex = [1; 2; 3];
        bcValue = [5e-6; 0; 0];
        
        
        % y-z surface, x = bar_totalLength
        BCs_numNodes = (1 * numElements2 * numElements3) * (1 * numNodesPerElement2 * numNodesPerElement3);
        
        elementIndex = find_element_index(numElements1, ...
                                          (1 : numElements2)', ...
                                          (1 : numElements3)', ...
                                          numElements1, ...
                                          numElements2, ...
                                          numElements3);
        
        nodeIndex = find_node_index(numNodesPerElement1, ...
                                    (1 : numNodesPerElement2)', ...
                                    (1 : numNodesPerElement3)', ...
                                    numNodesPerElement1, ...
                                    numNodesPerElement2, ...
                                    numNodesPerElement3, ...
                                    IEN_array(:, elementIndex));
        
        BCs_displacement = [BCs_displacement; ...
                            [kron(GN_array(nodeIndex), ones(3, 1)), repmat(dofIndex, BCs_numNodes, 1), repmat(bcValue, BCs_numNodes, 1)]];
        
        
        %------------------------------------------------------------------
        % -----------------------------------------------------------------
        %   End: Set BCs for patch 1
        % -----------------------------------------------------------------
        %------------------------------------------------------------------
        
        
        
        %------------------------------------------------------------------
        %  Build the ID array and BC array
        %------------------------------------------------------------------
        ID_array = build_id_array(BCs_displacement, numDOFsPerNode, GN_array);
        
        [BCU_array, BCF_array] = build_bc_array(BCs_displacement, BCs_force, ID_array);
        
        % Number of unknown degrees of freedom
        numUnknownDOFs = numDOFs - size(BCU_array, 1);
        
        clear BCs_displacement BCs_force;
        
        
        %------------------------------------------------------------------
        %  Save the BC files
        %------------------------------------------------------------------
        save(sprintf('%sfile_bc_time%06.0f', directory_assembly, n), ...
             'ID_array', ...
             'BCU_array', ...
             'BCF_array', ...
             'numUnknownDOFs', ...
             'time_current', ...
             '-v7.3');
    end
end
